{"version":3,"sources":["base/_base.scss","base/_grid.scss","content/_images.scss","content/_prices.scss","breakpoint/_breakpoint.scss","footer/_style.scss"],"names":[],"mappings":"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","file":"styles.min.css","sourcesContent":["html{\r\n    width: 100%;\r\n}\r\nbody{\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-weight: inherit;\r\n    font-style: inherit;\r\n    font-family: inherit;\r\n    text-align: left;\r\n    vertical-align: baseline;\r\n    //font-family: 'Open Sans', sans-serif;\r\n    //font-family: 'PT Sans', sans-serif;\r\n    //font-family: 'Roboto', sans-serif;\r\n    //font-family: 'Source Sans Pro', sans-serif;\r\n    //font-family: 'Lato', sans-serif;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    &:hover, &:focus, &:active{\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\ninput{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\ntextarea{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\n%clearfix {\r\n    *zoom: 1;\r\n    &:after {\r\n        content: '';\r\n        display: table;\r\n        line-height: 0;\r\n        clear: both;\r\n    }\r\n}\r\n",".container {\r\n    box-sizing: border-box;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    @extend %clearfix;\r\n}\r\n@media (min-width: 768px) {\r\n    .container {\r\n        width: 766px;\r\n    }\r\n}\r\n@media (min-width: 992px) {\r\n    .container {\r\n        width: 990px;\r\n    }\r\n}\r\n\r\n@media (min-width: 1200px) {\r\n    .container {\r\n        width: 1170px;\r\n    }\r\n}\r\n",".images {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  background-color: #000;\r\n  img {\r\n    width: 33.3%;\r\n    min-width: 360px;\r\n  }\r\n}",".prices {\r\n  position: relative;\r\n  width: 100%;\r\n  background: url(../img/girl-05.jpg) top center no-repeat;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  &__heading {\r\n    p {\r\n      font-size: 30px;\r\n      font-weight: 300;\r\n      line-height:40px;\r\n      max-width: 900px;\r\n      color: #fff;\r\n      text-align: center;\r\n      width: 100%;\r\n      margin: 0 auto;\r\n      padding: 60px 0 0;\r\n      span {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n  &__title {\r\n    font-size: 50px;\r\n    text-transform: uppercase;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-weight: 300;\r\n  }\r\n  &__items {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    max-width: 950px;\r\n    margin-bottom: 70px;\r\n  }\r\n  &__item {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    width: 30%;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border-radius: 0;\r\n    box-shadow: 1.49px 1.34px 4px 1px rgba(0,0,0,0.25);\r\n    height: 525px;\r\n    min-width: 278px;\r\n    @include breakpoint(max-width 555px) {\r\n      margin-bottom: 40px;\r\n    }\r\n    &:first-of-type,\r\n    &:last-of-type {\r\n      margin-top: 80px;\r\n      @include breakpoint(max-width 555px) {\r\n        margin-top: 0;\r\n      }\r\n    }\r\n    &--head {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 77px;\r\n      color: #fff;\r\n      font-size: 30px;\r\n      box-sizing: border-box;\r\n      padding: 20px;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n      background-color: rgba(226, 28, 33, 1);\r\n    }\r\n    &--list {\r\n      padding: 0px 15px 0px 30px;\r\n      box-sizing: border-box;\r\n      li {\r\n        padding: 7px 0;\r\n      }\r\n    }\r\n    &--btn {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: absolute;\r\n      bottom: -20px;\r\n      transition: 0.4s ease 0s;\r\n      color: #000000;\r\n      border: none;\r\n      background-color: rgba(255, 230, 0, 1);\r\n      box-shadow: 0px 4px 6px 0px rgba(0,0,0,0.2);\r\n      padding: 10px 20px;\r\n      box-sizing: border-box;\r\n      font-size: 18px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      min-width: 170px;\r\n      &:hover {\r\n        transition: 0.4s ease 0s;\r\n        color: #fff;\r\n        background-color: rgba(0, 77, 78, 1);\r\n      }\r\n    }\r\n  }\r\n  &__question {\r\n    span {\r\n      display: inline-block;\r\n      color: #fff;\r\n      background-color: rgba(255,255,255,.4);\r\n      padding: 10px 50px;\r\n      box-sizing: border-box;\r\n      font-size: 40px;\r\n      font-weight: 300;\r\n      text-align: center;\r\n    }\r\n  }\r\n}","//////////////////////////////\r\n// Default Variables\r\n//////////////////////////////\r\n$Breakpoint-Settings: (\r\n  'default media': all,\r\n  'default feature': min-width,\r\n  'default pair': width,\r\n\r\n  'force all media type': false,\r\n  'to ems': false,\r\n  'transform resolutions': true,\r\n\r\n  'no queries': false,\r\n  'no query fallbacks': false,\r\n\r\n  'base font size': 16px,\r\n\r\n  'legacy syntax': false\r\n);\r\n\r\n$breakpoint: () !default;\r\n\r\n//////////////////////////////\r\n// Imports\r\n//////////////////////////////\r\n@import \"breakpoint/settings\";\r\n@import 'breakpoint/context';\r\n@import 'breakpoint/helpers';\r\n@import 'breakpoint/parsers';\r\n@import 'breakpoint/no-query';\r\n\r\n@import 'breakpoint/respond-to';\r\n\r\n@import \"breakpoint/legacy-settings\";\r\n\r\n//////////////////////////////\r\n// Breakpoint Mixin\r\n//////////////////////////////\r\n\r\n@mixin breakpoint($query, $no-query: false) {\r\n  @include legacy-settings-warning;\r\n\r\n  // Reset contexts\r\n  @include private-breakpoint-reset-contexts();\r\n\r\n  $breakpoint: breakpoint($query, false);\r\n\r\n  $query-string: map-get($breakpoint, 'query');\r\n  $query-fallback: map-get($breakpoint, 'fallback');\r\n\r\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\r\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\r\n\r\n  // Allow for an as-needed override or usage of no query fallback.\r\n  @if $no-query != false {\r\n    $query-fallback: $no-query;\r\n  }\r\n\r\n  @if $query-fallback != false {\r\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\r\n  }\r\n\r\n  // Print Out Query String\r\n  @if not breakpoint-get('no queries') {\r\n    @media #{$query-string} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\r\n\r\n    $type: type-of(breakpoint-get('no query fallbacks'));\r\n    $print: false;\r\n\r\n    @if ($type == 'bool') {\r\n      $print: true;\r\n    }\r\n    @else if ($type == 'string') {\r\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\r\n        $print: true;\r\n      }\r\n    }\r\n    @else if ($type == 'list') {\r\n      @each $wrapper in breakpoint-get('no query fallbacks') {\r\n        @if $query-fallback == $wrapper {\r\n          $print: true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Write Fallback\r\n    @if ($query-fallback != false) and ($print == true) {\r\n      $type-fallback: type-of($query-fallback);\r\n\r\n      @if ($type-fallback != 'bool') {\r\n        #{$query-fallback} & {\r\n          @content;\r\n        }\r\n      }\r\n      @else {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include private-breakpoint-reset-contexts();\r\n}\r\n\r\n\r\n@mixin mq($query, $no-query: false) {\r\n  @include breakpoint($query, $no-query) {\r\n    @content;\r\n  }\r\n}\r\n",".footer {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: url(../img/girl-04.jpg) center center no-repeat;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  font-size: 14px;\r\n  &__form {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-width: 550px;\r\n    width: 100%;\r\n    padding: 25px;\r\n    background-color: #fff;\r\n    box-sizing: border-box;\r\n  }\r\n  &__header {\r\n    width: 100%;\r\n    p {\r\n      width: 100%;\r\n      text-align: right;\r\n      border-bottom: 1px dotted #000;\r\n      margin: 0;\r\n      padding-bottom: 10px;\r\n    }\r\n  }\r\n  &__body {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  &__row {\r\n    display: flex;\r\n    flex-direction: column;\r\n    p {\r\n      margin-top: 25px;\r\n      margin-bottom: 7px;\r\n    }\r\n    input[type=\"submit\"] {\r\n      display: inline-flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: rgba(3,3,3,1);\r\n      background-color: rgba(255,230,0,1);\r\n      border: 1px solid rgba(255,114,102,1);\r\n      padding: 13px 25px;\r\n      border-radius: 5px;\r\n      max-width: 200px;\r\n      margin: 30px auto 10px;\r\n      cursor: pointer;\r\n      text-transform: uppercase;\r\n      box-sizing: border-box;\r\n      &:hover {\r\n        background-color: rgba(151,147,147,1)\r\n      }\r\n    }\r\n  }\r\n  &__input {\r\n    display: flex;\r\n    input {\r\n      width: 100%;\r\n      padding: 0px 10px;\r\n      box-sizing: border-box;\r\n      height: 30px;\r\n      border: 1px solid rgba(255,181,175,1);\r\n      &:nth-of-type(2) {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .require {\r\n    color: red;\r\n    padding: 0px 5px;\r\n    box-sizing: border-box;\r\n  }\r\n}"],"sourceRoot":"css-source"}